{
  "0": "S->pila dai ( ) { expr vortaA ; } ;",
  "1":	"expr->declrstrct expr",
  "2":	"expr->declrstrct",
  "3":	"expr->",
  "4":	"declrstrct->declrvar",
  "5":	"declrstrct->amostraG",
  "6":	"declrstrct->pegaG",
  "7":	"declrstrct->arrodeiaG",
  "8":	"declrstrct->atequeG",
  "9":	"declrstrct->sepaG",
  "10":	"declrstrct->id assignoperator VOV arithmetic ;",
  "11":	"declrvar->tipo id maisvar",
  "12":	"declrvar->tipo id ;",
  "13":	"tipo->pila",
  "14":	"tipo->trocado",
  "15":	"tipo->naipe",
  "16":	"tipo->creio",
  "17":	"maisvar->atribuir maisvarG",
  "18":	"maisvar->atribuir",
  "19":	"maisvar->maisvarG",
  "20":	"maisvarG->, id atribuir maisvarG",
  "21":	"maisvarG->;",
  "22":	"amostraG->amostra ( amostravar",
  "23":	"amostravar->stringliteral amostravarG",
  "24":	"amostravar->id amostravarG",
  "25":	"amostravarG->, amostravar",
  "26":	"amostravarG->) ;",
  "27":	"pegaG->pega ( id ) ;",
  "28":	"arrodeiaG->arrodeia ( arrodeiaGG ; cond ) { expr }",
  "29":	"arrodeiaGG->declrvar",
  "30":	"arrodeiaGG->id atribuir",
  "31":	"atequeG->ateque ( cond ) { expr }",
  "32":	"sepaG->sepa ( cond ) { expr }",
  "33":	"sepaG->sepa ( cond ) { expr } sepaGG",
  "34":	"sepaGG->senao senaoG",
  "35":	"senaoG->sepaG",
  "36":	"senaoG->{ expr }",
  "37":	"atribuir->assignoperator atribuirG",
  "38":	"atribuirG->int",
  "39":	"atribuirG->float",
  "40":	"atribuirG->id",
  "41":	"atribuirG->idG",
  "42":	"atribuirG->VOV",
  "43":	"teclado->% tecladoG",
  "44":	"tecladoG->p",
  "45":	"tecladoG->t",
  "46":	"tecladoG->b",
  "47":	"tecladoG->n",
  "48":	"cond->relational opgrande",
  "49":	"cond->relational",
  "50":	"opgrande->logical relational opgrande",
  "51":	"opgrande->logical relational",
  "52":	"VOV->int",
  "53":	"VOV->float",
  "54":	"VOV->id",
  "55":	"VOV->idG",
  "56":	"arithmetic->arithmeticoperator VOV cont",
  "57":	"arithmetic->arithmeticoperator VOV",
  "58":	"cont->arithmeticoperator VOV cont",
  "59":	"cont->arithmeticoperator VOV",
  "60":	"relational->VOV relationaloperator VOV",
  "61":	"logical->idG logicaloperator idG",
  "62":	"idG->stringliteral id"
}
