<% import { Expr } from "./ast"; %>
#TOKEN_PROTOTYPES
pila,trocado,naipe,creio,dai,vorta,pega,amostra,sepa,senao,arrodeia,ateque,relationaloperator,assignoperator,logicaloperator,notoperator,arithmeticoperator,multiplieroperator,int,float,bool,stringliteral,id

#GRAMMAR
S -> pila dai '(' ')' '{' expr vorta ';' '}' ';';
expr -> declrstrct expr | declrstrct | ' ' <% (e)=>new exprNode(e) %>;
declrstrct -> declrvar|amostra'|pega'|arrodeia'|ateque'|sepa'|id assignoperator VOV arithmetic ";" <% (e)=>new declrstrctNode(e) %>;
declrvar -> tipo id maisvar | tipo id ';' <% (e)=>new declrvarNode(e) %>;
tipo -> pila | trocado | naipe | creio <% (e)=>new tipoNode(e) %>;
maisvar -> atribuir maisvar' | atribuir | maisvar' <% (e)=>new maisvarNode(e) %>;
maisvar' -> ',' id atribuir maisvar' | ';' <% (e)=>new maisvarNode(e) %>;
amostra' -> amostra '(' amostravar <% (e)=>new amostraNode(e) %>;
amostravar -> stringliteral amostravar' | id amostravar' <% (e)=>new amostravarNode(e) %>;
amostravar' -> ',' amostravar | ')' ';' <% (e)=>new amostravarNode(e) %>;
pega' -> pega '(' id ')' ';' <% (e)=>new pegaNode(e) %>;
arrodeia' -> arrodeia '(' arrodeia'' ';' cond ')' '{' expr '}' <% (e)=>new arrodeiaGNode(e) %>;
arrodeia'' -> declrvar | id atribuir <% (e)=>new arrodeiaGGNode(e) %>;
ateque' -> ateque '('cond')' '{' expr '}' <% (e)=>new atequeGNode(e) %>;
sepa' -> sepa '('cond')' '{' expr '}' | sepa '('cond')' '{' expr '}' sepa'' <% (e)=>new sepaGNode(e) %>;
sepa'' -> senao senao' <% (e)=>new sepaGGNode(e) %>;
senao' -> sepa'|'{' expr '}' <% (e)=>new senaoGNode(e) %>;
atribuir -> assignoperator atribuir' <% (e)=>new atribuirNode(e) %>;
atribuir' -> int | float | bool | stringliteral |id |id'|VOV <% (e)=>new atribuirGNode(e) %>;
cond -> relational opgrande | relational <% (e)=>new condNode(e) %>;
opgrande -> logical relational opgrande| logical relational <% (e)=>new opgrandeNode(e) %>;
VOV -> int | float | id  | id' <% (e)=>new VOVNode(e) %>;
arithmetic -> arithmeticoperator VOV cont | arithmeticoperator VOV <% (e)=>new arithmeticNode(e) %>;
cont -> arithmeticoperator VOV cont| arithmeticoperator VOV <% (e)=>new contNode(e) %>;
relational -> VOV relationaloperator VOV <% (e)=>new relationalNode(e) %>;
logical -> id' logicaloperator id' <% (e)=>new logicalNode(e) %>;
id' -> stringliteral id <% (e)=>new idGNode(e) %>;